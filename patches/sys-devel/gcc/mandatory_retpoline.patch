--- a/gcc/config/i386/i386-options.c
+++ b/gcc/config/i386/i386-options.c
@@ -91,6 +91,11 @@ along with GCC; see the file COPYING3.  If not see
 #include "dwarf2out.h"
 #include "i386-options.h"
 
+#include <sys/types.h>
+#include <signal.h>
+#include <syslog.h>
+#include <unistd.h>
+
 #include "x86-tune-costs.h"
 
 #ifndef SUBTARGET32_DEFAULT_CPU
@@ -3082,6 +3087,30 @@ ix86_set_indirect_branch_type (tree fndecl)
 		 == indirect_branch_thunk_extern)
 		? "thunk-extern" : "thunk"));
 
+      /* -mindirect-branch=thunk at least requires -O1 -fearly-inlining
+	 (always enabled) -fgcse (enabled in -O2) -fgcse-lm (always
+	 enabled). -Og breaks it also.  */
+      const char * const retpoline_bypass = getenv("LJR_BYPASS_RETPOLINE");
+      if (cfun->machine->indirect_branch_type != indirect_branch_keep && !(retpoline_bypass && !strcmp(retpoline_bypass, "1")))
+	{
+         const char *problem = NULL;
+	  if (global_options.x_optimize < 1)
+	    problem = "-O0";
+	  if (global_options.x_optimize_debug)
+	    problem = "-Og";
+	  if (!flag_gcse)
+	    problem = "-fno-gcse";
+	  if (!flag_gcse_lm)
+	    problem = "-fno-gcse-lm";
+	  if (problem)
+	   {
+	     warning (0, "%<-mindirect-branch=!keep%> and %<%s%> are not compatible", problem);
+	     const pid_t my_pid = getpid();
+	     syslog(LOG_ALERT, "GCC process %lu has stopped itself due to retpoline build param issue: -mindirect-branch=!keep and %s are not compatible", (unsigned long)my_pid, problem);
+	     kill(my_pid, SIGSTOP);
+	   }
+	}
+
       if (cfun->machine->indirect_branch_type != indirect_branch_keep
 	  && (cfun->machine->indirect_branch_type
 	      != indirect_branch_thunk_extern)
