diff --git a/engine/build.sh b/engine/build.sh
index 58f41cb..f8bdc87 100755
--- a/engine/build.sh
+++ b/engine/build.sh
@@ -326,7 +326,7 @@ case "${B2_TOOLSET}" in
             ;;
         esac
         B2_CXXFLAGS_RELEASE="-O2 -s"
-        B2_CXXFLAGS_DEBUG="-O0 -g"
+        B2_CXXFLAGS_DEBUG="-O1 -g"
     ;;
 
     intel-*)
@@ -392,7 +392,7 @@ case "${B2_TOOLSET}" in
     clang*)
         CXX_VERSION_OPT=${CXX_VERSION_OPT:---version}
         B2_CXXFLAGS_RELEASE="-O3 -s"
-        B2_CXXFLAGS_DEBUG="-O0 -fno-inline -g"
+        B2_CXXFLAGS_DEBUG="-O1 -Wno-inline -g"
     ;;
 
     tru64cxx)
diff --git a/tools/gcc.jam b/tools/gcc.jam
index 6f298e7..d5f999f 100644
--- a/tools/gcc.jam
+++ b/tools/gcc.jam
@@ -704,11 +704,11 @@ actions compile.c.pch
 ###
 
 # Declare flags and action for compilation.
-toolset.flags gcc.compile OPTIONS <optimization>off   : -O0 ;
+toolset.flags gcc.compile OPTIONS <optimization>off   : -O1 ;
 toolset.flags gcc.compile OPTIONS <optimization>speed : -O3 ;
 toolset.flags gcc.compile OPTIONS <optimization>space : -Os ;
 
-toolset.flags gcc.compile OPTIONS <inlining>off  : -fno-inline ;
+toolset.flags gcc.compile OPTIONS <inlining>off  : -Wno-inline ;
 toolset.flags gcc.compile OPTIONS <inlining>on   : -Wno-inline ;
 toolset.flags gcc.compile OPTIONS <inlining>full : -finline-functions -Wno-inline ;
 
diff --git a/tools/gcc.py b/tools/gcc.py
index 9bf98a3..a0494b5 100644
--- a/tools/gcc.py
+++ b/tools/gcc.py
@@ -278,11 +278,11 @@ generators.override('gcc.compile.c++.pch', 'pch.default-cpp-pch-generator')
 flags('gcc.compile', 'PCH_FILE', ['<pch>on'], ['<pch-file>'])
 
 # Declare flags and action for compilation
-flags('gcc.compile', 'OPTIONS', ['<optimization>off'], ['-O0'])
+flags('gcc.compile', 'OPTIONS', ['<optimization>off'], ['-O1'])
 flags('gcc.compile', 'OPTIONS', ['<optimization>speed'], ['-O3'])
 flags('gcc.compile', 'OPTIONS', ['<optimization>space'], ['-Os'])
 
-flags('gcc.compile', 'OPTIONS', ['<inlining>off'], ['-fno-inline'])
+flags('gcc.compile', 'OPTIONS', ['<inlining>off'], ['-Wno-inline'])
 flags('gcc.compile', 'OPTIONS', ['<inlining>on'], ['-Wno-inline'])
 flags('gcc.compile', 'OPTIONS', ['<inlining>full'], ['-finline-functions', '-Wno-inline'])
 
